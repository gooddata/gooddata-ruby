language: ruby
cache: bundler
stages:
    -
        name: before-merge
        if: 'type IN (push, pull_request)'
    -
        name: after-merge
        if: 'type IN (api, cron)'
    -
        name: platform-cleanup
        if: 'type IN (cron)'
jobs:
    include:
        -
            stage: before-merge
            name: 'pronto code review'
            script: |
              git remote add upstream https://github.com/gooddata/gooddata-ruby.git
              git fetch upstream master
              bundle exec pronto run -c upstream/master --exit-code
        -
            stage: before-merge
            name: 'unit tests'
            script: 'bundle exec rake test:unit'
            rvm: [2.3, 2.4, 2.5, jruby-1.7.19, jruby-9.1.5, jruby-9.1.7, jruby-9.1.14]
        -
            stage: before-merge
            name: 'sdk integration (vcr) tests - base'
            script: 'VCR_RECORD_MODE=none bundle exec rake test:sdk'
            rvm: jruby-9.1.14
        -
            stage: before-merge
            name: 'sdk integration (vcr) tests - project'
            script: 'VCR_RECORD_MODE=none bundle exec rake test:project'
            rvm: jruby-9.1.14
        -
            name: 'lcm integration tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:integration\n"
            env: VCR_ON=false
            rvm: jruby-9.1.7
        -
            name: 'lcm integration tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:slow\n"
            env: VCR_ON=false
            rvm: jruby-9.1.7
        -
            name: 'user provisioning tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:userprov\n"
            env: VCR_ON=false
            rvm: jruby-9.1.7
        -
            name: 'sdk integration tests - base'
            script: 'bundle exec rake test:sdk'
            env: VCR_ON=false
            rvm: 2.5
        -
            name: 'sdk integration tests - project'
            script: 'bundle exec rake test:project'
            env: VCR_ON=false
            rvm: 2.5
        -
            name: 'staging1 - lcm integration tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:integration\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging1 - lcm slow tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:slow\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging1 - lcm user provisioning tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:userprov\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging1 - sdk integration tests - base'
            script: 'bundle exec rake test:sdk'
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: 2.5
            stage: after-merge
        -
            name: 'staging1 - sdk integration tests - project'
            script: 'bundle exec rake test:project'
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: 2.5
            stage: after-merge
        -
            name: 'staging2 - lcm slow tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:integration\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging2 - lcm user provisioning tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:userprov\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging2 - sdk integration tests - base'
            script: 'bundle exec rake test:sdk'
            env: [GD_ENV=testing, VCR_ON=false]
            rvm: 2.5
            stage: after-merge
        -
            name: 'staging2 - sdk integration tests - project'
            script: 'bundle exec rake test:project'
            env: [GD_ENV=testing, VCR_ON=false]
            rvm: 2.5
            stage: after-merge
        -
            name: 'staging3 - lcm integration tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:integration\n"
            env: [GD_ENV=development, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging3 - lcm slow tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:slow\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging3 - lcm user provisioning tests'
            script: "bundle exec rake -f lcm.rake docker:build\nbundle exec rake -f lcm.rake docker:bundle\nbundle exec rake -f lcm.rake test:docker:userprov\n"
            env: [GD_ENV=staging, VCR_ON=false]
            rvm: jruby-9.1.7
            stage: after-merge
        -
            name: 'staging3 - sdk integration tests - base'
            script: 'bundle exec rake test:sdk'
            env: [GD_ENV=development, VCR_ON=false]
            rvm: 2.5
            stage: after-merge
        -
            name: 'staging3 - sdk integration tests - project'
            script: 'bundle exec rake test:project'
            env: [GD_ENV=development, VCR_ON=false]
            rvm: 2.5
            stage: after-merge
        -
            stage: after-merge
            name: 'staging1 - test environment clean-up'
            script: 'bundle exec ruby bin/test_projects_cleanup.rb -f'
            env: GD_ENV=staging
        -
            stage: after-merge
            name: 'staging2 - test environment clean-up'
            script: 'bundle exec ruby bin/test_projects_cleanup.rb -f'
            env: GD_ENV=testing
        -
            stage: after-merge
            name: 'staging3 - test environment clean-up'
            script: 'bundle exec ruby bin/test_projects_cleanup.rb -f'
            env: GD_ENV=development
notifications:
    slack:
        secure: DtBi41vUmUXWbklcvD5gfQkzlYFMG9X5//QXxpc3oXRY5EFbh/YdsESzVP1o4tAR64JvbRqwbHzRgejhhbezS1Zx7BdjRF+DG+bT1qJ+0xfxzmC+wuA/TmqZrfjATpPsjVNZiFxuFVBdgcUuaZAmeZw3UhmeOyLg0ujYnsRbPuM+19AuCG1EDKUBjeSuhvMFck+TGASS9gCLvUSABP+lVr7JDsEsuKCcjTnw2/et27suZOT9gxl9SZNBQhX1zm65q87MLwy+kMXiwwebgeTzraotMNZI3x1yV7cb7SLown3VHZiS3o9bYSGMapgvlW9HGhMDpi07Q2v4DISi7Llot913BjpO1hbTByauWyxMrkMjqtpq9rF2StC8gCqLP9Sf75++7q2ibhRWZWJ44ur71juN60z2d2sTELqDUFzaXQTPvDeIFsUOMk8Sz+WmsDOo1FQi2zvTBUaxgFFMkIGTNXuG3un5iDMHsmIWDCeMvdYujUCvUhFDtW4/gphnZuWCX2p+3kiJdhRKo2pbSBXkdQ47RXKxGFPDUfW3UgVz5PoYJg8WFsInOCQgsUTuHMJhjCZ1k/ReZNjfuunq0WiFcFrIzA/WAFg6tShr83atPx/HKps9ieJAki/avwU1+3IMQeWUbDuisoQFWme350LDfKrK3Hncsrc2aXQlI8tm1ZI=
        on_pull_requests: false
